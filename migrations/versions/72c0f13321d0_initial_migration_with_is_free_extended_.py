"""Initial migration with is_free_extended and others

Revision ID: 72c0f13321d0
Revises: 
Create Date: 2025-06-03 19:43:07.538411

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '72c0f13321d0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('score_log', schema=None) as batch_op:
        batch_op.alter_column('score',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_free_extended', sa.Boolean(), nullable=True))
        batch_op.alter_column('birthdate',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Date(),
               existing_nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(length=10),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('prefecture',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('prefecture',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=10),
               existing_nullable=True)
        batch_op.alter_column('birthdate',
               existing_type=sa.Date(),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.drop_column('is_free_extended')

    with op.batch_alter_table('score_log', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('score',
               existing_type=sa.INTEGER(),
               nullable=False)

    # ### end Alembic commands ###
